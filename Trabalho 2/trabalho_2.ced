ORG H0100	
	JSR R7,Inicializa_Variaveis_Parede
	JSR R7,Zera_Visor
	JSR R7,Imprime_MSG_Identificacao
	JSR R7,Aguarda_Enter
Inicia_Pergunta_Parede:
	JSR R7,Imprime_MSG_Pergunta_Parede		
	JSR R7,Pegar_Numero_Digitado
	CMP R4,#2				
	BEQ Caso_enter_com_numero_vazio
	CMP R4,#3 				
	BEQ Caso_backspace
	JMP Caso_numero_digitado		;ELSE => CASO NÚMERO DIGITADO
Caso_enter_com_numero_vazio:
	JMP Encerrar_o_programa
Caso_backspace:
	JMP Inicia_pergunta_parede
Caso_numero_digitado:
	JSR R7,Verifica_Validade_Parede
	CMP R0,#HFFFF				;VERIFICA SE É '-1', PAREDE INVÁLIDA
	BEQ Caso_Parede_Invalida		;CASO DE PAREDE INVÁLIDA
	JMP Caso_Parede_Valida
Caso_Parede_Invalida:
	JSR R7,Imprime_MSG_Parede_Invalida
	JSR R7,Aguarda_Enter 
	JMP Inicia_pergunta_parede
Caso_Parede_Valida:
	JSR R7,Imprime_Informacoes_Parede
Esperar_Entrada_Usuario:
	JSR R7,Pegar_Caracter_Digitado
Verifica_Cancelamento:
	MOV R1,C_CODE
	CMP R0,R1				;VERIFICA SE É A TECLA C
	BEQ Cancelar_E_Retornar	
	MOV R1,C_MIN_CODE	
	CMP R0,R1				;VERIFICA SE É A TECLA c
	BEQ Cancelar_E_Retornar
	JMP Verifica_Enter
Cancelar_E_Retornar:
	JMP Inicia_pergunta_parede
Verifica_Enter:	
	CMP R0,ENTER_CODE			;VERIFICA SE É A TECLA ENTER
	BEQ Iniciar_Dados_Leitura_Parede
	JMP Esperar_Entrada_Usuario		;SE NÃO FOR 'ENTER','C' ou 'c' CONTINUA AGUARDANDO
Iniciar_Dados_Leitura_Parede:
	JSR R7,Inicializar_Dados_Leitura
	JMP Iniciar_Leitura_Parede
Iniciar_Leitura_Parede:
	JSR R7,Verificar_Teclado
	TST R0
	BNE Teclado_detectado
	JMP Ler_Camera
Teclado_detectado:
	JSR R7,Pegar_Caracter_Digitado
	MOV R1,C_CODE
	CMP R0,R1				;VERIFICA SE É A TECLA C
	BEQ Cancelar_Leitura
	MOV R1,C_MIN_CODE				
	CMP R0,R1				;VERIFICA SE É A TECLA c
	BEQ Cancelar_Leitura
	JMP Ler_Camera				;VOLTA AO FLUXO SE O CARACTERE FOR DIFERENTE DE C e c
Cancelar_Leitura:
	JMP Inicia_Pergunta_Parede
Ler_Camera:
	JSR R7,Imprime_Coordenadas
	JSR R7,Ler_Posicao_Atual_Camera
	MOV R0,VALOR_LADRILHO
	JSR R7,Verificar_Valor_Ladrilho
	JSR R7,Atualizar_Coordenadas
	TST R4
	BNE Finalizacao_Leitura_Parede
	MOV COORDENADA_X,R3
	MOV COORDENADA_Y,R4
	JSR R7,Aguarda_Enter
	JMP Iniciar_Leitura_Parede
Finalizacao_Leitura_Parede:
	JSR R7,Finalizar_Leitura_Parede
	JMP Inicia_Pergunta_Parede	

;-------------------------------------------------------------------------------------
;FIM
				
Encerrar_o_programa:
	JSR R7,Inicializa_Visor			
	;Imprime a mensagem de encerramento
	MOV #MSG_ENCERRAMENTO,R0
	MOV PUTMSG,R5 				
	JSR R7,H0080
	HLT

;-------------------------------------------------------------------------------------
;FUNÇÕES DOS SISTEMA	

Mover_Camera_Baixo:
	MOV #0,R0
	MOV #1,R1
	MOV MOVE,R5
	JSR R7,H0080	
	RTS R7

Mover_Camera_Direita:
	MOV #1,R0
	MOV #0,R1
	MOV MOVE,R5
	JSR R7,H0080	
	RTS R7

Mover_Camera_Esquerda:
	MOV #-1,R0
	MOV #0,R1
	MOV MOVE,R5
	JSR R7,H0080	
	RTS R7

;R0 = 0 se nada foi digitado
Verificar_Teclado:
	MOV KBHIT,R5				
	JSR R7,H0080				
	RTS R7

;R0 = {0 para Não Usado, 1 para Boas Condições e 2 para Ladrilho Danificado}
Ler_Posicao_Atual_Camera:
	MOV #0,R0
	MOV #0,R1
	MOV READ,R5				
	JSR R7,H0080
	RTS R7		

;Retorna R4 = {0 para sucesso, 1 para leitura finalizada}
Atualizar_Coordenadas:
	MOV LADO,R0
	CMP R0,#1
	BEQ Caso_direito
	JMP Caso_Esquerdo_F     ;ELSE = CASO ESQUERDO
     Caso_direito:
	JMP Caso_Direito_F

Caso_Direito_F:
	MOV COORDENADA_X,R0
	MOV LARGURA_PAREDE,R1
	SUB #1,R1
	CMP R0,R1
	BEQ Mudar_Baixo_Esquerda
	JMP Incrementar_X
     Mudar_Baixo_Esquerda:
	MOV COORDENADA_Y,R0
	MOV ALTURA_PAREDE,R1
	SUB #1,R1
	CMP R0,R1
	BNE Continuar_Mudar_Baixo_Esquerda
	JMP Finalizar_Leitura_Coordenadas
     Continuar_Mudar_Baixo_Esquerda:	
	ADD #1,R0
	MOV R0,COORDENADA_Y
	MOV #-1,R0
	MOV R0,LADO
	JSR R7,Mover_Camera_Baixo
	MOV #0,R4
	RTS R7
     Incrementar_X:
	ADD #1,R0
	MOV R0,COORDENADA_X
	JSR R7,Mover_Camera_Direita
	MOV #0,R4
	RTS R7

Caso_Esquerdo_F:
	MOV COORDENADA_X,R0
	BEQ Mudar_Baixo_Direita
	JMP Decrementar_X
     Mudar_Baixo_Direita:
	MOV COORDENADA_Y,R0
	MOV ALTURA_PAREDE,R1
	SUB #1,R1
	CMP R0,R1
	BNE Continuar_Mudar_Baixo_Direita
	JMP Finalizar_Leitura_Coordenadas
     Continuar_Mudar_Baixo_Direita:
	ADD #1,R0
	MOV R0,COORDENADA_Y
	MOV #1,R0
	MOV R0,LADO
	JSR R7,Mover_Camera_Baixo
	MOV #0,R4
	RTS R7
     Decrementar_X:
	SUB #1,R0
	MOV R0,COORDENADA_X
	JSR R7,Mover_Camera_Esquerda
	MOV #0,R4
	RTS R7

Finalizar_Leitura_Coordenadas:
	MOV #1,R4
	RTS R7

Verificar_Valor_Ladrilho:
	MOV VALOR_LADRILHO,R0
	CMP R0,#1
	BEQ Add_ladrinho_boas_condicoes
	CMP R0,#2
	BEQ Add_ladrinho_danificado
	BR  Add_ladrinho_nao_usado		;ELSE = NÃO USADO
     Add_ladrinho_boas_condicoes:
	MOV BOAS_CONDICOES,R0
	ADD #1,R0				;BOAS_CONDICOES++
	MOV R0,BOAS_CONDICOES
	RTS R7
     Add_ladrinho_danificado:
	MOV DANIFICADOS,R0
	ADD #1,R0				;DANIFICADO++
	MOV R0,DANIFICADOS
	RTS R7
     Add_ladrinho_nao_usado:	
	MOV NAO_USADOS,R0
	ADD #1,R0					;NAO_USADO++
	MOV R0,NAO_USADOS
	RTS R7 				

Imprime_Coordenadas:
	JSR R7,Zera_Visor
	JSR R7,Inicializa_Visor	
	;Imprime o inicio da mensagem de coordenada
	MOV #MSG_COORDENADAS_1,R0
	MOV PUTMSG,R5				
	JSR R7,H0080				
	;Imprime o X
	MOV COORDENADA_X,R0
	ADD #H30,R0				;CONVERTE NÚMERO PARA ASCII
	MOV PUTCHAR,R5				
	JSR R7,H0080				
	;Imprime a segunda parte da mensagem de coordenada
	MOV #MSG_COORDENADAS_2,R0
	MOV PUTMSG,R5				
	JSR R7,H0080				
	;Imprime o Y
	MOV COORDENADA_Y,R0
	ADD #H30,R0				;CONVERTE NÚMERO PARA ASCII
	MOV PUTCHAR,R5				
	JSR R7,H0080				
	;Imprime a terceira parte da mensagem de coordenada
	MOV #MSG_COORDENADAS_3,R0
	MOV PUTMSG,R5				
	JSR R7,H0080				
	RTS R7					

Inicializa_Variaveis_Parede:
        MOV #0,R0				;INICIALIZA COM ZERO
	MOV R0,NUMERO_PAREDE
 	MOV R0,LARGURA_PAREDE
	MOV R0,ALTURA_PAREDE
	MOV R0,COORDENADA_X 		
	MOV R0,COORDENADA_Y
        MOV R0,BOAS_CONDICOES
	MOV R0,NAO_USADOS
	MOV R0 DANIFICADOS
	RTS R7

Inicializa_Visor:
        MOV #0,R0  				;POSICAO INICIAL
	MOV SETCURSOR,R5			
	JSR R7,H0080	
        RTS R7                                  

;Imprime a palavra vazia
Zera_Visor:
        JSR R7,Inicializa_Visor		
	MOV #MSG_EMPTY,R0
	MOV PUTMSG,R5				
	JSR R7,H0080	
	RTS R7

Imprime_MSG_Identificacao:
	JSR R7,Inicializa_Visor
	MOV #MSG_IDENTIFICACAO,R0
	MOV PUTMSG,R5 			
	JSR R7,H0080
	RTS R7		

Imprime_MSG_Pergunta_Parede:
	JSR R7,Inicializa_Visor
	MOV #MSG_ASK_PAREDE,R0
	MOV PUTMSG,R5 				
	JSR R7,H0080 	
	;Reposiciona o cursor ao final da pergunta
	MOV CURSOR_PERGUNTA_PAREDE,R0  		
	MOV SETCURSOR,R5				
	JSR R7,H0080				
	RTS R7			

Imprime_MSG_Parede_Invalida:
	JSR R7,Inicializa_Visor
	MOV #MSG_PAREDE_INVALIDA,R0
	MOV PUTMSG,R5				
	JSR R7,H0080				
	RTS R7

Imprime_Informacoes_Parede:
	JSR R7,Zera_Visor
	JSR R7,Inicializa_Visor
	;Imprime o inicio da mensagem com o número da parede
	MOV #MSG_INFO_PAREDE_1,R0
	MOV PUTMSG,R5				
	JSR R7,H0080				
	;Imprime o número da parede
	MOV NUMERO_PAREDE,R0
	ADD #H30, R0				;CONVERTE NÚMERO PARA ASCII
	MOV PUTCHAR,R5				
	JSR R7,H0080				
	;Imprime segunda parte da mensagem com a largura
	MOV #MSG_INFO_PAREDE_2,R0
	MOV PUTMSG,R5				
	JSR R7,H0080				
	;Imprime o número da largura
	MOV LARGURA_PAREDE,R0
	ADD #H30, R0				;CONVERTE NÚMERO PARA ASCII
	MOV PUTCHAR,R5				
	JSR R7,H0080				
	;Imprime segunda parte da mensagem com a altura
	MOV #MSG_INFO_PAREDE_3,R0
	MOV PUTMSG,R5				
	JSR R7,H0080				
	;Imprime o número da altura
	MOV ALTURA_PAREDE,R0
	ADD #H30, R0				;CONVERTE NÚMERO PARA ASCII
	MOV PUTCHAR,R5				
	JSR R7,H0080
	RTS R7				

Aguarda_Enter:
	MOV GETCHAR,R5				
        JSR R7,H0080  			
	CMP R0,ENTER_CODE			;VERIFICA SE É A TECLA ENTER
	BNE Aguarda_enter			;SE NÃO FOR CONTINUA AGUARDANDO		
	RTS R7					;SE FOR RETORNA  

;Pega o caracter e retorna em R0
Pegar_Caracter_Digitado:
	MOV GETCHAR,R5				;GETCHAR
        JSR R7,H0080   				;_SISTEMA
	RTS R7

;Rertorna em R0 '-1' para parede inválida caso contrário salva a largura e a altura
Verifica_Validade_Parede:
	MOV NUMERO_PAREDE,R0			;CARREGA O NÚMERO DA PAREDE EM R0 PARA A FUNÇÃO SETWALL
	MOV SETWALL,R5				;SETWALL
	JSR R7,H0080 				
	CMP R0,#HFFFF				;VERIFICA SE É '-1', PAREDE INVÁLIDA
	BEQ Retorno_Verifica_Validade_Parede	;CASO DE PAREDE INVÁLIDA
	MOV R0,LARGURA_PAREDE			;SALVA A LARGURA RETORNADA
	MOV R1,ALTURA_PAREDE			;SALVA A ALTURA RETORNADA
      Retorno_Verifica_Validade_Parede:	
	RTS R7	

Inicializar_Dados_Leitura:
	;Zera a posição da camera
	MOV MOVE00,R5				
        JSR R7,H0080   				
	MOV #0,R0				;ZERA DADOS
	MOV R0,COORDENADA_X			
	MOV R0,COORDENADA_Y						
	MOV R0,DANIFICADOS			
	MOV R0,BOAS_CONDICOES
	MOV R0,NAO_USADOS
	MOV R0,LADO				
	MOV #1,R0
	MOV R0,LADO				;LADO INICIA PARA A DIREITA (1)
	RTS R7
     

;;Retorna em R4: 1 -> Número digitado, 2 -> Enter com vazio, 3 -> Backspace
;;Em caso de 1 retorna em R3 o número digitado	
Pegar_Numero_Digitado:
	MOV #-1,R0				;INICIALIZA O NÚMERO PAREDE COM -1 (VAZIO)
	MOV R0,NUMERO_PAREDE	
     Pegar_caractere_numero_parede:	
	JSR R7,Pegar_Caracter_Digitado
	CMP R0,ENTER_CODE			;VERIFICA SE NÃO FOI ENTER
	BEQ Enter_numero_parede			;CASO TENHA SIDO ENTER
	CMP R0,BACKSPACE_CODE			;VERIFICA SE É BACKSPACE
	BEQ Backspace_numero_parede		;CASO TENHA SIDO BACKSPACE
	JMP Valida_numero_parede_digitado
     Backspace_numero_parede:
	MOV #3,R4				;RETORNA O CASO DE BACKSPACE
	RTS R7	
     Enter_numero_parede:
	MOV NUMERO_PAREDE,R1  			;CARREGA O NÚMERO DA PAREDE
	CMP R1,#-1				;VERIFICA SE É VAZIO (-1)
	BEQ Enter_com_numero_parede_vazio	
	MOV #1, R4				;RETORNA O CASO DE NÚMERO DIGITADO
	RTS R7
     Enter_com_numero_parede_vazio:
        MOV #2, R4				;RETORNA O CASO DE ENTER COM VAZIO
	RTS R7
     Valida_numero_parede_digitado:
	CMP R0,ZERO_CODE	                ;VERIFICA SE É UM VALOR MAIOR OU IGUAL A ZERO
	BMI Ignorar_entrada_numero_parede
	CMP R0,NOVE_CODE_MAIS_UM		;VERIFICA SE O VALOR É MENOR OU IGUAL A NOVE
	BPL Ignorar_entrada_numero_parede
	JMP Imprime_numero_parede_digitado
     Ignorar_entrada_numero_parede:
	JMP Pegar_caractere_numero_parede	;SEGUE AGUARDANDO O NÚMERO DA PAREDE  
     Imprime_numero_parede_digitado:
	MOV PUTCHAR,R5 				
	JSR R7,H0080 				
	;Salva a parede
	SUB #H30,R0				;DECODIFICA NÚMERO EM ASCII
	MOV NUMERO_PAREDE,R1			;CARREGA O NUMERO_PAREDE EM R1
	CMP R1,#-1				;VERIFICA SE O ESTADO ERA VAZIO
	BNE Atualiza_numero_parede
	MOV #0,R1
	MOV R1,NUMERO_PAREDE 
     Atualiza_numero_parede:
	MOV NUMERO_PAREDE,R2			;CARREGA O NUMERO_PAREDE EM R2
	ASL R2  				;MULTIPLICA O R2 POR 2
	ASL R1					;MULTIPLICA O R1 POR 8
	ASL R1 
	ASL R1	
	ADD R2,R1				;SOMA PARA FINALIZAR A MULTIPLICACAO POR 10
	ADD R0,R1				;ADICIONA O NOVO DIGITO
	MOV R1,NUMERO_PAREDE			;SALVA O NUMERO DA PAREDE NOVO
	JMP Pegar_caractere_numero_parede	;SEGUE AGUARDANDO O NÚMERO DA PAREDE  

Finalizar_Leitura_Parede:
	JSR R7,Zera_Visor
	JSR R7,Inicializa_Visor
	;Imprime o inicio da mensagem do total
	MOV #MSG_TOTAL_1,R0
	MOV PUTMSG,R5				
	JSR R7,H0080				
	;Imprime a segunda parte da mensagem do total
	MOV #MSG_TOTAL_2,R0
	MOV PUTMSG,R5				
	JSR R7,H0080				
	;Imprime a terceira parte da mensagem do total
	MOV #MSG_TOTAL_3,R0
	MOV PUTMSG,R5				
	JSR R7,H0080				
	;Imprime a quarta parte da mensagem do total
	MOV #MSG_TOTAL_4,R0
	MOV PUTMSG,R5				
	JSR R7,H0080		
	;Aguardar enter e voltar		
	JSR R7,Aguarda_Enter
	RTS R7

;--------------------------------------------------------------------------------------
;VARIÁVEIS

ORG H2000
	COORDENADA_X:	        dw   0
	COORDENADA_Y:	        dw   0
	BOAS_CONDICOES:	        dw   0 ;Contador
	NAO_USADOS:             dw   0 ;Contador 
	DANIFICADOS:		dw   0 ;Contador
  ;FUNÇÕES DO SISTEMA
	KBHIT:			dw   0
	GETCHAR:		dw   1
 	PUTCHAR:		dw   2
	PUTMSG:			dw   3
	SETCURSOR:		dw   4
	SETWALL:		dw   5
        READ:			dw   6
	MOVE00:			dw   7
        MOVE:			dw   8
        MOVING:			dw   9
        GETCAMERA:		dw   10

  ;VARIAVEIS DA PAREDE
	NUMERO_PAREDE:     	dw   0
	LARGURA_PAREDE:		dw   0
        ALTURA_PAREDE:		dw   0
	LADO:			dw   0 ;1 Direita, -1 Esquerda, 0 Não mover
	VALOR_LADRILHO:		dw   0

   ;DIVERSAS
	CURSOR_PERGUNTA_PAREDE: dw   18
;--------------------------------------------------------------------------------------
;CÓDIGOS DE CARACTERES
	ENTER_CODE:		dw   13
	BACKSPACE_CODE:		dw   8
	ZERO_CODE:	        dw   48
	NOVE_CODE_MAIS_UM:      dw   58
	C_CODE:			dw   67
	C_MIN_CODE:		dw   99
;--------------------------------------------------------------------------------------
;MENSAGENS
	MSG_IDENTIFICACAO: 	dab 'Autor: Joao Pedro Cartao: 00303397 ',0	
	MSG_ASK_PAREDE:	   	dab 'Informe a parede:                  ',0
	MSG_ENCERRAMENTO:  	dab 'Programa finalizado!               ',0
	MSG_PAREDE_INVALIDA: 	dab 'Numero da parede invalido.         ',0
	MSG_EMPTY:		dab '                                   ',0
	MSG_INFO_PAREDE_1:	dab 'Parede ',0
	MSG_INFO_PAREDE_2:	dab ', Largura=',0
	MSG_INFO_PAREDE_3:      dab ', Altura=',0
	MSG_COORDENADAS_1:	dab 'Coordenadas (',0
	MSG_COORDENADAS_2:	dab ',',0
	MSG_COORDENADAS_3:	dab ') - ',0
	MSG_DANIFICADO:		dab 'danificado',0
	MSG_BOM:		dab 'bom',0
	MSG_VAZIO:		dab 'vazio',0
	MSG_TOTAL_1:		dab 'Bons: ',0
	MSG_TOTAL_2:		dab ', danifs: ',0
	MSG_TOTAL_3:		dab ', vazios: ',0
	MSG_TOTAL_4:		dab '.'

;--------------------------------------------------------------------------------------	
